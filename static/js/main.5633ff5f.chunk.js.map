{"version":3,"sources":["components/FeedbackOptions.js","components/Statistics.js","components/Section.js","components/Notification.js","components/FeedbackStat.js","App.js","reportWebVitals.js","index.js","components/FeedbackStat.module.css"],"names":["FeedbackOptions","onLeaveFeedback","className","s","Btn","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","Math","round","Section","title","children","Notification","message","FeedbackCounter","state","feedbackIncrement","event","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","this","percentage","React","Component","App","FeedbackStat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+QAgCeA,EA9BS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACzB,OACE,sBAAKC,UAAU,UAAf,UACE,wBACEA,UAAWC,IAAEC,IACbC,KAAK,SACLC,KAAK,OACLC,QAASN,EAJX,kBAQA,wBACEC,UAAWC,IAAEC,IACbC,KAAK,SACLC,KAAK,UACLC,QAASN,EAJX,qBAQA,wBACEC,UAAWC,IAAEC,IACbC,KAAK,SACLC,KAAK,MACLC,QAASN,EAJX,qBCNSO,EAbI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKX,UAAU,aAAf,UACE,oBAAGA,UAAU,QAAb,kBAA2BO,KAC3B,oBAAGP,UAAU,QAAb,qBAA8BQ,KAC9B,oBAAGR,UAAU,QAAb,iBAA0BS,KAC1B,oBAAGT,UAAU,QAAb,mBAA4BU,KAC5B,oBAAGV,UAAU,QAAb,+BACqBY,KAAKC,MAAMF,GADhC,WCCSG,EARC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,oBAAIhB,UAAU,UAAd,SAAyBe,IACxBC,MCFQC,EAHM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCmDEC,E,4MA9CbC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPY,kBAAoB,SAACC,GACnB,IAAQlB,EAASkB,EAAMC,OAAfnB,KACR,EAAKoB,UAAS,SAACC,GAAD,sBAAmBrB,EAAOqB,EAAUrB,GAAQ,O,EAG5DsB,mBAAqB,WACnB,OAAO,EAAKN,MAAMb,KAAO,EAAKa,MAAMZ,QAAU,EAAKY,MAAMX,K,EAE3DkB,gCAAkC,WAChC,OACG,EAAKP,MAAMb,MACT,EAAKa,MAAMb,KAAO,EAAKa,MAAMZ,QAAU,EAAKY,MAAMX,KACrD,K,4CAGJ,WACE,MAA+BmB,KAAKR,MAA5Bb,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQkB,KAAKF,qBACbG,EAAaD,KAAKD,kCACxB,OACE,sBAAK3B,UAAU,WAAf,UACE,cAAC,EAAD,CAASe,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBhB,gBAAiB6B,KAAKP,sBAEzC,cAAC,EAAD,CAASN,MAAM,aAAf,SACGL,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBkB,IAGtB,cAAC,EAAD,CAAcX,QAAQ,+B,GAxCJY,IAAMC,WCGrBC,MARf,WACE,OACE,mCACE,cAACC,EAAD,OCQSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,IAAM,6B","file":"static/js/main.5633ff5f.chunk.js","sourcesContent":["import React from \"react\";\nimport s from \"./FeedbackStat.module.css\";\nconst FeedbackOptions = ({ onLeaveFeedback }) => {\n  return (\n    <div className=\"buttons\">\n      <button\n        className={s.Btn}\n        type=\"button\"\n        name=\"good\"\n        onClick={onLeaveFeedback}\n      >\n        Good\n      </button>\n      <button\n        className={s.Btn}\n        type=\"button\"\n        name=\"neutral\"\n        onClick={onLeaveFeedback}\n      >\n        Neutral\n      </button>\n      <button\n        className={s.Btn}\n        type=\"button\"\n        name=\"bad\"\n        onClick={onLeaveFeedback}\n      >\n        Bad\n      </button>\n    </div>\n  );\n};\nexport default FeedbackOptions;\n","import React from \"react\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div className=\"statistics\">\n      <p className=\"title\">Good:{good}</p>\n      <p className=\"title\">Neutral:{neutral}</p>\n      <p className=\"title\">Bad:{bad}</p>\n      <p className=\"title\">Total:{total}</p>\n      <p className=\"title\">\n        Positive feedback:{Math.round(positivePercentage)}%\n      </p>\n    </div>\n  );\n};\nexport default Statistics;\n","import React from \"react\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2 className=\"heading\">{title}</h2>\n      {children}\n    </section>\n  );\n};\nexport default Section;\n","import React from \"react\";\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\nexport default Notification;\n","import React from \"react\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport Statistics from \"./Statistics\";\nimport Section from \"./Section\";\nimport Notification from \"./Notification\";\n\nclass FeedbackCounter extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  feedbackIncrement = (event) => {\n    const { name } = event.target;\n    this.setState((prevState) => ({ [name]: prevState[name] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    return (\n      (this.state.good /\n        (this.state.good + this.state.neutral + this.state.bad)) *\n      100\n    );\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const percentage = this.countPositiveFeedbackPercentage();\n    return (\n      <div className=\"feedback\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.feedbackIncrement} />\n        </Section>\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={percentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\nexport default FeedbackCounter;\n","import FeedbackStat from \"./components/FeedbackStat\";\nfunction App() {\n  return (\n    <>\n      <FeedbackStat />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"FeedbackStat_Btn__3ehuK\"};"],"sourceRoot":""}